#- name: Finding RPM files
#  find:
#    paths: "/app/kubernetes"
#    patterns: "*.rpm"
#  register: rpm_result

#- name: install kubernetes rpm pkg
#  yum:
#    name: "{{ item.path }}"
#    state: present
#  with_items: "{{ rpm_result.files }}"
- name: pull images
  shell: /etc/ansible/roles/docker/files/Scripts/pull_images.sh

- name: install kubernetes rpm pkg
  shell: yum localinstall -y /app/kubernetes/*.rpm

- name: create pki directory
  file:
    path: "/etc/kubernetes/pki"
    state: directory

- name: create manifests directory
  file:
    path: "/etc/kubernetes/manifests"
    state: directory

- name: create kubectl directory
  file:
    path: "~/.kube"
    state: directory

- name: copy manifests files
  copy: 
    src: "{{ item }}"
    dest: "/etc/kubernetes/manifests"
    mode: +x
  with_fileglob:
    - manifests/*

- name: copy certScripts
  copy:
    src: "Scripts/createCA.sh"
    dest: "/etc/kubernetes/pki"
    mode: +x

- name: install cfssl
  get_url:
    url: https://pkg.cfssl.org/R1.2/cfssl_linux-amd64
    dest: /usr/local/bin/cfssl
    mode: +x

- name: install cfssljson
  get_url:
    url: https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64
    dest: /usr/local/bin/cfssljson
    mode: +x

- name: install cfssl-cert-info
  get_url:
    url: https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64
    dest: /usr/local/bin/cfssl-certinfo
    mode: +x

- name: generate certs and keys
  command: chdir=../etc/kubernetes/pki ./createCA.sh

- name: copy stand-alone kubelet config
  copy:
    src: "kubelet_cfg/10-kubeadm.conf.1"
    dest: "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf"
    mode: +x
    backup: yes

- name: start kubelet
  systemd:
    name: kubelet
    state: started
    enabled: true
    daemon_reload: yes

- name: copy kubectl config file
  copy:
    src: "/etc/kubernetes/admin.conf"
    dest: "~/.kube/config"

- pause:
    minutes: 2

- name: create clusterrolebinding
  shell: kubectl create clusterrolebinding kubelet-bootstrap --clusterrole=system:node-bootstrapper --user=kubelet-bootstrap

- name: copy boot-strap kubelet config
  copy:
    src: "kubelet_cfg/10-kubeadm.conf.2"
    dest: "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf"
    mode: +x
    backup: yes
  notify: restart kubelet

- pause:
    minutes: 1

- name: approve csr
  shell: /etc/ansible/roles/kube/files/Scripts/approve_csr.sh

- name: copy full kubelet config
  copy:
    src: "kubelet_cfg/10-kubeadm.conf.3"
    dest: "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf"
    mode: +x
    backup: yes
  notify: restart kubelet




#- name: bootstrap auth
#- name:   
